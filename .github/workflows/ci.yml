# .github/workflows/ci.yml
name: Ruby on Rails CI

on:
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout
      checks: write   # Required for dorny/test-reporter
    env:
      RAILS_ENV: test
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY }}
      ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY }}
      ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${{ secrets.ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT }}
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: salary_payment_file_exporter_test
        ports:
          - 5432:5432
        # Health check to ensure postgres is ready to accept connections
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.4'
          bundler-cache: true # This will run `bundle install` and cache gems

      - name: Set up Test Database
        run: |
          bundle exec rake db:create
          bundle exec rake db:migrate 
          bundle exec rake db:schema:load

      - name: Run RSpec tests
        run: bundle exec rspec --format RspecJunitFormatter --out tmp/rspec.xml --format progress
#
#      - name: Upload test report
#        uses: actions/upload-artifact@v4
#        with:
#          name: rspec-report
#          path: tmp/rspec.html


      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: RSpec Tests
          path: tmp/rspec.xml
          reporter: java-junit

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

#      - name: Linting with RuboCop
#        run: bundle exec rubocop
